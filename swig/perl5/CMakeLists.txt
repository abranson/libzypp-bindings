# cmake likes unique target names
SET(WRAP perl)

FIND_PACKAGE(Perl REQUIRED)

EXECUTE_PROCESS(COMMAND ${PERL_EXECUTABLE} -e "use Config; print \$Config{cppflags}" OUTPUT_VARIABLE PERL_CXX_FLAGS)

SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${PERL_CXX_FLAGS}")

EXECUTE_PROCESS(COMMAND ${PERL_EXECUTABLE} -e "use Config; print \$Config{archlibexp}" OUTPUT_VARIABLE PERL_LIB_PATH)
SET( PERL_INS_PATH "${PERL_LIB_PATH}" )
SET( PERL_LIB_PATH "${PERL_LIB_PATH}/CORE" )

MESSAGE(STATUS "Perl executable: ${PERL_EXECUTABLE}")
MESSAGE(STATUS "Perl cpp-flags: ${PERL_CXX_FLAGS}")
MESSAGE(STATUS "Perl lib path: ${PERL_LIB_PATH}")

SET( SWIG_OUTPUT "${CMAKE_CURRENT_BINARY_DIR}/zypp_wrap.cxx" )
SET( SWIG_INPUT "${CMAKE_CURRENT_SOURCE_DIR}/zypp.i" )

ADD_CUSTOM_COMMAND (
   OUTPUT  ${CMAKE_CURRENT_BINARY_DIR}/zypp_wrap.cxx
   COMMAND ${CMAKE_COMMAND} -E echo_append "Creating wrapper code for perl..."
   COMMAND ${SWIG_EXECUTABLE} -DZYPP_DEPRECATED -c++ -perl5 -xmlout ${CMAKE_CURRENT_BINARY_DIR}/parse.xml -o ${CMAKE_CURRENT_BINARY_DIR}/zypp_wrap.cxx -I${ZYPP_INCLUDE_DIR} ${CMAKE_CURRENT_SOURCE_DIR}/../zypp.i
   COMMAND ${CMAKE_COMMAND} -E echo "Done."
   WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
   DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/../*.i ${CMAKE_CURRENT_SOURCE_DIR}/*.i
)

ADD_CUSTOM_TARGET( ${WRAP}_glue
   DEPENDS ${SWIG_OUTPUT}
)

ADD_LIBRARY( ${WRAP}_zypp SHARED "${CMAKE_CURRENT_BINARY_DIR}/zypp_wrap.cxx" )
SET_TARGET_PROPERTIES( ${WRAP}_zypp
  PROPERTIES
    PREFIX ""
    OUTPUT_NAME zypp
)
ADD_DEPENDENCIES( ${WRAP}_zypp ${WRAP}_glue )

INCLUDE_DIRECTORIES( ${PERL_LIB_PATH} )
INCLUDE_DIRECTORIES( ${ZYPP_INCLUDE_DIR} )
TARGET_LINK_LIBRARIES( ${WRAP}_zypp ${ZYPP_LIBRARY} )

INSTALL(TARGETS ${WRAP}_zypp LIBRARY DESTINATION ${PERL_INS_PATH})
INSTALL( FILES ${CMAKE_CURRENT_BINARY_DIR}/zypp.pm DESTINATION ${PERL_INS_PATH})

